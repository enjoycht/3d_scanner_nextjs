name: "ReactJS build and Update Release"

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  discussions: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
            node-version: '20'
            check-latest: true

      - name: Install dependencies
        run: yarn install

      - name: Build application
        run: yarn build

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name: Run Build to C code
        run: python3 main.py
      
      - name: Get commits between tags
        run: |
          TAG1=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) | cut -d'-' -f1)
          TAG2=$(git describe --tags)
          COMMIT_RANGE="$TAG1..$TAG2"
          echo "🏷️commit version: ${COMMIT_RANGE}"
          if [ $(/usr/bin/git log ${COMMIT_RANGE} --grep="feat:" --pretty=format:"%s" --date=short | grep -c "feat:") -gt 0 ]; then
            echo "# ✨ Features" >> commit_msg.txt
            /usr/bin/git log ${COMMIT_RANGE} --grep="feat:" --pretty=format:"- [%ad]%s ([%an](https://github.com/${{github.repository_owner}}/${{github.event.repository.name}}/commit/%h))" --date=short >> commit_msg.txt
            echo -e "\n" >> commit_msg.txt
          fi
          if [ $(/usr/bin/git log ${COMMIT_RANGE} --grep="fix:" --pretty=format:"%s" --date=short | grep -c "fix:") -gt 0 ]; then
            echo "# 🐛 Bug Fixes" >> commit_msg.txt
            /usr/bin/git log ${COMMIT_RANGE} --grep="fix:" --pretty=format:"- [%ad]%s ([%an](https://github.com/${{github.repository_owner}}/${{github.event.repository.name}}/commit/%h))" --date=short >> commit_msg.txt
            echo -e "\n" >> commit_msg.txt
          fi
          if [ $(/usr/bin/git log ${COMMIT_RANGE} --grep="docs:" --pretty=format:"%s" --date=short | grep -c "docs:") -gt 0 ]; then
            echo "# 📝 Documentation" >> commit_msg.txt
            /usr/bin/git log ${COMMIT_RANGE} --grep="docs:" --pretty=format:"- [%ad]%s ([%an](https://github.com/${{github.repository_owner}}/${{github.event.repository.name}}/commit/%h))" --date=short >> commit_msg.txt
            echo -e "\n" >> commit_msg.txt
          fi
          if [ $(/usr/bin/git log ${COMMIT_RANGE} --grep="style:" --pretty=format:"%s" --date=short | grep -c "style:") -gt 0 ]; then
            echo "# 🎨 Style" >> commit_msg.txt
            /usr/bin/git log ${COMMIT_RANGE} --grep="style:" --pretty=format:"- [%ad]%s ([%an](https://github.com/${{github.repository_owner}}/${{github.event.repository.name}}/commit/%h))" --date=short >> commit_msg.txt
            echo -e "\n" >> commit_msg.txt
          fi
          if [ $(/usr/bin/git log ${COMMIT_RANGE} --grep="refactor:" --pretty=format:"%s" --date=short | grep -c "refactor:") -gt 0 ]; then
            echo "# ♻️ Refactoring" >> commit_msg.txt
            /usr/bin/git log ${COMMIT_RANGE} --grep="refactor:" --pretty=format:"- [%ad]%s ([%an](https://github.com/${{github.repository_owner}}/${{github.event.repository.name}}/commit/%h))" --date=short >> commit_msg.txt
            echo -e "\n" >> commit_msg.txt
          fi
          if [ $(/usr/bin/git log ${COMMIT_RANGE} --grep="test:" --pretty=format:"%s" --date=short | grep -c "test:") -gt 0 ]; then
            echo "# 🧪 Tests" >> commit_msg.txt
            /usr/bin/git log ${COMMIT_RANGE} --grep="test:" --pretty=format:"- [%ad]%s ([%an](https://github.com/${{github.repository_owner}}/${{github.event.repository.name}}/commit/%h))" --date=short >> commit_msg.txt
            echo -e "\n" >> commit_msg.txt
          fi
          if [ $(/usr/bin/git log ${COMMIT_RANGE} --grep="chore:" --pretty=format:"%s" --date=short | grep -c "chore:") -gt 0 ]; then
            echo "# 🚀 Chore" >> commit_msg.txt
            /usr/bin/git log ${COMMIT_RANGE} --grep="chore:" --pretty=format:"- [%ad]%s ([%an](https://github.com/${{github.repository_owner}}/${{github.event.repository.name}}/commit/%h))" --date=short >> commit_msg.txt
            echo -e "\n" >> commit_msg.txt
          fi

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: commit_msg.txt
          name: "Cleaner Website ${{ github.ref_name }}"
          files: website.h
          token: ${{ secrets.GITHUB_TOKEN }}